{
  "hash": "25e4a8e376c9d09e3a4c49de0a3372f1",
  "result": {
    "markdown": "---\ntitle: \"Welcome to MLaRPiS\"\nauthor: \n  - name: Gerko Vink\n    orcid: 0000-0001-9767-1924\n    email: g.vink@uu.nl\n    affiliations:\n      - name: Methodology & Statistics @ UU University\n  - name: Hanne Oberman\n    orcid: 0000-0003-3276-2141\n    email: h.i.oberman@uu.nl\n    affiliations:\n      - name: Methodology & Statistics @ UU\ndate: 13 Sep 2023\ndate-format: \"D MMM YYYY\"\nexecute: \n  echo: true\neditor: source\nformat: \n  revealjs:\n    theme: [solarized, gerko.scss]\n    progress: true\n    multiplex: true\n    transition: fade\n    slide-number: true\n    margin: 0.075\n    logo: \"images/logo.png\" \n    toc: false\n    toc-depth: 1\n    toc-title: Outline\n    scrollable: false\n    width: 1200\n    reference-location: margin\n    footer: Gerko Vink and Hanne Oberman - Markup Languages @ UU\n---\n\n\n## Disclaimer\n\nI owe a debt of gratitude to many people as the thoughts and code in these slides are the process of years-long development cycles and discussions with my team, friends, colleagues and peers. When someone has contributed to the content of the slides, I have credited their authorship.\n\nScientific references are in the footer. Opinions and figures are my own.\n\n\n\n\n\n# Introduction to the course\n\n## Course Aims & Outline\n\n**Official**: This course gives an overview of the state-of-the-art in statistical markup, reproducible programming and scientific digital representation.\n\n**Realistic**: Hanne and Gerko will give you peek into our lives as opinionated developers. We will cover: <br><br>\n\n| Week | Date   | Focus                                       | Location |\n|------|--------|---------------------------------------------|----------|\n| [1](weeks/week-1.qmd)    | 13 Sep | Introduction to Markup Languages; and LaTeX | [BOL 1062](https://students.uu.nl/bolognalaan-101) |\n| [2](weeks/week-2.qmd)    | 27 Sep | Markdown in (most) Flavors                  | [BOL 1025](https://students.uu.nl/bolognalaan-101) |\n| [3](weeks/week-3.qmd)    | 01 Nov | Version Control and Development Flow        | [SGG 128](https://students.uu.nl/sjoerd-groenmangebouw) |\n| [4](weeks/week-4.qmd)    | 08 Nov | Reproducible Research Repositories          | [BOL 1025](https://students.uu.nl/bolognalaan-101) |\n| [5](weeks/week-5.qmd)    | 22 Nov | Developer Portfolio                         | [BOL 1025](https://students.uu.nl/bolognalaan-101) |\n| [6](weeks/week-6.qmd)    | 06 Dec | Packages, Code Robustness and Unit Testing  | [BOL 1025](https://students.uu.nl/bolognalaan-101) |\n\n## Course materials\n::: callout-important\nWe won't use Blackboard. All materials can be found at\n\n[www.gerkovink.com/markup](https://www.gerkovink.com/markup)\n\n### Hand in\nAll contributions to this course are to be delivered to this repository \n\n[github.com/gerkovink/markup2023](https://github.com/gerkovink/markup2023)\n\nPlease post your content-related questions as [an issue in the same repository](https://github.com/gerkovink/markup2023/issues)\n\n### Finalization\nDeadline for all is **Jan 8 2024**. Grades will be available **Jan 12 2024**\n:::\n\n## Deliverables\nYou must submit a portfolio that proves\n\n1. That you can use markup languages for scientific manuscript writing\n2. That you can produce a reproducible repository that conforms to rigorous open science and computing standards\n3. That you can present this portfolio using markup languages\n4. That you are able to develop, test, maintain and host this portfolio\n\n## This means\nthat you should cover at least\n\n- Markup manuscript in either $\\LaTeX$ or `Quarto`\n- Research repository detailing a reproducible simulation with proper licencing\n- Personal repository (website that showcases your work) hosted with GitHub pages.\n\nand one of\n\n- An error-free compilable source R-package on a GitHub with proper licencing, tests, version sequence and a referable DOI\n- A Shiny app hosted on GitHub with proper licensing, version sequence and a referable DOI and with an error free  [Shinyapps.io](https://www.shinyapps.io)\n\nA more comprehensive portfolio can result in extra credit in the form of a higher grade.\n\n# Understanding Markup\n\n## What is Markup?\n\nA markup language is a system for annotating a document that provides **structure** and **meaning** to the content, allowing it to be **processed** and **displayed** in a **consistent** manner across *different platforms and devices*.\n\n### Extremely brief history\n\n-   **GML** (Generalized Markup Language): Developed in the 1960s by IBM, GML was one of the first markup languages. It was designed to help with the publishing process by defining the structure and content of documents.\n-   **SGML** (Standard Generalized Markup Language): Evolved from GML in the 1980s, SGML became an ISO standard and was used as the basis for several other markup languages, including HTML.\n-   **HTML** (HyperText Markup Language): Developed in the early 1990s by Tim Berners-Lee, HTML became the standard markup language for creating web pages. It's a subset of SGML.\n-   **XML** (eXtensible Markup Language): Introduced in the late 1990s, XML was designed to store and transport data. Unlike HTML, which is about displaying information, XML is about carrying information.\n\n## Technically speaking\n\n-   **Tex** (aka $\\LaTeX$) is not a markup language, but a software system for document preparation. This is because plain text is used as opposed to other markup languages. However, markup tagging conventions are used to define and stylize document stucture, graphical elements, citations and text.\n-   **Markdown** is an extremely simplified alternative to document preparation software systems. `markdown` is a lightweigt markup language that can be edited using any text editor, while being quick and easy to compile. It is nowadays widely considered as the language of the internet as it bridges most great attributes of other markup languages.\n-   **Quarto** is even more comprehensive as it is an open-source scientific and technical publishing system. `quarto` is aimed at delivering reproducible, consistent [Pandoc](https://pandoc.org) markdown documents that unify the best of all other markup languages.\n\n## Importance in digital representation\n\n-   Consistency: Markup languages ensure that content is displayed consistently across different platforms and devices.\n-   Separation of Content and Presentation: Markup languages allow for a clear distinction between content and how it's presented. This separation makes it easier to repurpose content for different mediums or platforms.\n-   Interoperability: Markup languages enable different systems and applications to communicate with each other by providing a standardized way to represent data.\n-   ease of mind: Styles in *modern* markup languages allow you to focus on the content and not\n\n## Everyday interactions with markup\n\n-   HTML in Everyday Life:\n    -   Web Browsing: Every time students visit a website, they're interacting with content structured by HTML. From paragraphs to images to links, all are defined using HTML tags.\n    -   Emails: Many emails, especially those with formatting, images, or links, are compose using HTML.\n    -   Online Platforms: Social media posts, blogs, and even some word processors use HTML behind the scenes to structure and display content.\n-   XML in Everyday Applications:\n    -   Data Storage: Many applications use XML to store configuration data, user settings, or other information.\n    -   Office Documents: Formats like Microsoft's .docx (Word) or .xlsx (Excel) are essentially zipped XML files. When you save a Word document, you're saving XML data.\n    -   Web Services: Many web services and APIs return data in XML format, which is then processed and displayed by the application.\n    -   RSS Feeds: Used by news websites and blogs to syndicate content, RSS feeds are XML documents that can be read by various applications.\n\n## $E=MC^2$\n\n::: callout-important\nBe careful with your online carbon footprint\n:::\n\nIn the grand scheme of things, trivial activities like emailing, chatting and video conferencing may seem insignificant. Collectively it adds up to a much larger carbon footprint than needed.\n\nEverything that you do online is either energy or costs energy. And cloud storage means burning carbon for eternity.\n\n## Traditional Word Processors vs Scientific Writing\n\n::: columns\n::: {.column width=\"50%\"}\n**Graphical (Word) Processors**\n\n-   While Word and similar word processors have built-in equation editors, they often lack the flexibility and customization options that markup languages offer.\n-   Formatting equations consistently across a large document or multiple documents can be challenging in Word.\n-   Collaborating on complex scientific documents with multiple authors can lead to formatting inconsistencies, especially when different versions of the software are used.\n-   Integration with other Tools is not always straightforward or impossible.\n-   Word documents, especially those with complex equations, might not always display consistently across different devices or software versions.\n:::\n\n::: {.column width=\"45%\"}\n**Markup languages**\n\n-   Markup languages (especially $\\LaTeX$) provide precise control over the layout and appearance of elemants and equations.\n-   The same code will produce the same output regardless of the platform or software version, ensuring consistency.\n-   Simple integration with version control systems, reference managers, and other tools essential for scientific writing.\n-   Many scientific journals provide $\\LaTeX$ or markdown templates, making it easier for researchers to prepare manuscripts that meet specific formatting requirements.\n:::\n:::\n\n## Why are we teaching you Markup?\n\nIf you prefere lists: \n\n-   Reproducibility (Wk2)\n-   Version controlling and Collaboration (Wk3)\n-   Consistent presentation\n-   Time-saving (After this course)\n-   Modular nature\n-   Bibliography management (Wk1)\n-   Oh, Behave (Wk 1-6)\n\nIf you prefer arguments:\n\n1. It is the standard in scientific publishing and research\n2. We prepare you for a career built on scientific principles\n3. Journal styles\n\n# About $\\LaTeX$\n\n## The evolution of `TeX` and $\\LaTeX$\n\n- TeX: Birth of a Typesetting Revolution\n\n  - 1978: Donald Knuth, a computer scientist, develops `TeX`, a typesetting\n  system.\n  - Motivation: Dissatisfaction with the quality of typesetting in his book,\n  [\"The Art of Computer Programming\"](https://www-cs-faculty.stanford.edu/~knuth/taocp.html).\n  - Key Features: Precise control over typography, mathematical typesetting,\n  and cross-referencing.\n\n- LaTeX: Building on TeX's Foundation\n\n  - Early 1980s: Leslie Lamport creates $\\LaTeX$, a document preparation system based on `TeX`.\n  - Goal: Simplify the complex `TeX` formatting commands, making it more\n  accessible to a broader audience.\n  - Advantages: Provides document structure through commands like `\\section` and\n  `\\tableofcontents`.\n- TeX and $\\LaTeX$: A Symbiotic Relationship\n\n  - $\\LaTeX$ builds on the `TeX` typesetting engine, allowing users to create\n  professional documents and presentations.\n  - $\\LaTeX$ packages extend functionality, catering to various types of\n  documents (e.g., articles, theses, presentations).\n\n## Precision \n1. Unmatched Typography Precision: `TeX` and `LaTeX` excel at typesetting with precise control over fonts, layout, and mathematical notation.\n\n- Ideal for academic papers, theses, and publications with complex formatting requirements.\n\n2. Superior Mathematical Typesetting: `LaTeX`'s native support for mathematical notation makes it the go-to choice for scientists, engineers, and mathematicians.\n\n- No more MS equation editor\n\n3. Cross-Referencing and Bibliography Management: Effortlessly manage references and citations with BibTeX in `LaTeX`.\n\n- Automatic numbering, referencing, and bibliography generation.\n\n4. Collaboration and Version Control: `LaTeX` documents can be easily managed using version control systems like `Git` (Wk 3).\n\n- This makes it straightforward to collaborate simultaneously on the same text and documents. \n\n## And...\n5. Professional Look and Feel: LaTeX produces documents with a professional and consistent appearance.\n\n - This explains the popularity in academia, research, and publishing.\n\n6. LaTeX Ecosystem: A vast collection of packages and templates [is available on CTAN]() to cater to diverse document types.\n\n7. Long-Term Stability: Documents created with TeX and LaTeX have a long shelf life.\n\n  - Because `TeX` is software, it ensures compatibility across different platforms and software versions.\n\n\n## Hands on\n\n- Introduction to `LaTeX` and the basics of `LaTeX` for scientific writing. [see this week's lab](../weeks/week-1.qmd)\n- Incorporating equations. [background](https://www.gerkovink.com/oldmarkup/Wk3/Exercise%203/LaTeX%20background.zip)\n- Incorporating figures and tables. [background](https://www.gerkovink.com/oldmarkup/Archive/2019/Wk3/LaTeX%20background.zip)\n<br><br>\n\n<center>\n![[source](https://xkcd.com/184/) and [LaTeX](../documents/Wk1/funny.tex)](images/lec-1/cos.png)\n</center>\n\n\n## Collaborative LaTeX Editing with Overleaf\nOverleaf is an online `LaTeX` editor that allows users to create, edit, and collaborate on `LaTeX` documents in real time.\n\n<center>\n![](images/lec-1/overleaf.png)\n</center>\n\nIt's a cloud-based platform that eliminates the need for local `LaTeX` installations and simplifies the collaborative writing process.\n\n## Benefits of Using Overleaf\n\n- Collaborate with colleagues and teammates in real time, regardless of their physical location.\n- Multiple users can edit the same document simultaneously, making group projects efficient.\n- Device agnostic and therefore worry-free.\n- Overleaf integrates with Git, allowing users to track changes, revert to previous versions, and manage document history.\n- Overleaf offers a vast library of templates for various document types, including research papers, theses, presentations, and more.\n- Overleaf compiles `LaTeX` documents in the cloud, so you don't need to configure or run `LaTeX` locally.\n- It just works!\n\n---\n\n## Potential Challenges of Using Overleaf\n\n- Internet Dependency: Overleaf requires a stable internet connection. \n\n- Limited Offline Access: Overleaf operates online, which means **no internet, no access*.\n\n- Privacy Concerns: Sensitive or confidential documents may not be uploaded to Overleaf. You should always consider data privacy.\n\n- Subscription Costs: basic Overleaf is free, but more advanced features and collaboration options are costly.\n\n---\n\n## `LaTeXdiff`\n**LaTeXdiff** is a tool (`PERL` script) used to highlight and track changes between two versions of a `LaTeX` document.\n\nIt's particularly useful for collaborative writing and when reviewing or revising documents.\n\n### How `LaTeXdiff` Works\n\n`LaTeXdiff` operates by comparing two LaTeX files:\n\n  - The original version (e.g., `document-v1.tex`)\n  - The revised version (e.g., `document-v2.tex`)\n\n`LaTeXdiff` identifies differences in the text, equations, figures, and more. `LaTeXdiff` then generates a new `LaTeX` file highlighting these differences, using color coding, strikethrough and other visual cues.\n\n---\n\n### How to `LaTeXdiff` in theory and practice\n\n![](https://media.giphy.com/media/kHU8W94VS329y/giphy.gif?cid=ecf05e47kj68ftluib01mrjnkkxec7upge37eiizan3uurk2&ep=v1_gifs_search&rid=giphy.gif&ct=g)\n\n\n## Bibliography management\n\n- Zotero --> Hanne will introduce Zotero as a tool for collecting, organizing, and citing research materials.\n- BibTeX --> Gerko will say something about BibTeX in conjunction with LaTeX for citation management.\n\n# Exit\n\n## Topics covered so far\n- This course\n- Markup languages\n- `LaTeX`\n- Overleaf\n- `LaTeXdiff`\n- Zotero\n\n## Next meeting\n**Markdown** + hand in the exercise in [this week's lab](../weeks/week-1.qmd)\n\n<center>\n![](https://media.giphy.com/media/3orif0Pxk3I4WQj46k/giphy.gif?cid=ecf05e47pt25knfnoi0lccqh5rmr1ssjcee3rq82d0sn3mxr&ep=v1_gifs_search&rid=giphy.gif&ct=g)\n</center>",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}